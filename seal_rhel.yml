---
- name: Setup RHEL for Template
  hosts: "{{ operating_system }}_updates.shadowman.dev"

  tasks:

    - name: Install Katello RPM for Satellite Server for RHEL 7
      ansible.builtin.yum:
        name: https://sat6.shadowman.dev/pub/katello-ca-consumer-latest.noarch.rpm
        state: present
      when: ansible_distribution_version is match("7.*")

    - name: Install Katello RPM for Satellite Server for RHEL 8
      ansible.builtin.dnf:
        name: https://sat6.shadowman.dev/pub/katello-ca-consumer-latest.noarch.rpm
        state: present
      when: ansible_distribution_version is match("8.*")

    - name: Use Activation Key to Register RHEL7 Machine to Satellite
      community.general.redhat_subscription:
        state: present
        activationkey: "RHEL7_Latest"
        org_id: Shadow_Man
      when: ansible_distribution_version is match("7.*")

    - name: Use Activation Key to Register RHEL8 Machine to Satellite
      community.general.redhat_subscription:
        state: present
        activationkey: "RHEL8_Latest"
        org_id: Shadow_Man
      when: ansible_distribution_version is match("8.*")

    - name: Enable Repositories for RHEL 7
      community.general.rhsm_repository:
        name:
          - rhel-7-server-rpms
          - rhel-7-server-extras-rpms
          - rhel-7-server-optional-rpms
        purge: True
      when: ansible_distribution_version is match("7.*")

    - name: Enable Repositories for RHEL 8
      community.general.rhsm_repository:
        name:
          - rhel-8-for-x86_64-appstream-rpms
          - rhel-8-for-x86_64-baseos-rpms
        purge: True
      when: ansible_distribution_version is match("8.*")

    - name: upgrade all packages (yum)
      ansible.builtin.yum:
        name: '*'
        state: latest
      when: ansible_pkg_mgr == "yum"

    - name: upgrade all packages (dnf)
      ansible.builtin.dnf:
        name: '*'
        state: latest
      when: ansible_pkg_mgr == "dnf"

    - name: Reboot server to apply all update
      ansible.builtin.reboot:

    - name: Enable initial-setup service
      ansible.builtin.systemd:
        name: initial-setup.service
        enabled: yes
      when: ansible_distribution_version is match("7.*")

    - name: Set Machine ID file permissions
      ansible.builtin.file:
        path: /etc/machine-id
        mode: 0777

    - name: Unregister this machine from Satellite
      community.general.redhat_subscription:
        state: absent
        org_id: Shadow_Man

    - name: Remove and Clean all Subscription Data
      ansible.builtin.shell: subscription-manager remove --all && subscription-manager clean

    - name: Delete All Machine Specific Files
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      with_items:
        - /var/lib/dbus/machine-id
        - /etc/rhsm/facts/katello.facts

    - name: Find files in ssh_host
      ansible.builtin.find:
        paths: /etc/ssh/
        patterns: 'ssh_host_*'
      register: ssh_host_delete

    - name: Delete files in ssh_host
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ ssh_host_delete.files }}"
      loop_control:
        label: "{{ item.path }}"

    - name: Find files in rules.d
      ansible.builtin.find:
        paths: /etc/udev/rules.d/
        patterns: '70-persistent-*'
      register: rules_delete

    - name: Delete files in rules.d
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ rules_delete.files }}"
      loop_control:
        label: "{{ item.path }}"






